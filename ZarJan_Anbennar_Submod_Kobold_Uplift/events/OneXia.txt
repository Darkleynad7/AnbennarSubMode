########################################
# one_xia Events                         #
########################################

namespace = one_xia

# The DYNASTYNAME wulin has fallen!
province_event = {
	id = one_xia.1
	title = one_xia.1.t
	picture = COURT_eventPicture
	
	major = yes
	is_triggered_only = yes
	
	desc = {
		trigger = {
			owner = { has_reform = wulin }
			FROM = {
				has_reform = wulin
			}
		}
		desc = one_xia.t.da
	}
	
	desc = {
		trigger = {
			owner = { has_reform = wulin }
			FROM = {
				NOT = { has_reform = wulin }
			}
		}
		desc = one_xia.1.db
	}
	
	desc = {
		trigger = {
			owner = {
				NOT = { has_reform = wulin }
			}
		}
		desc = one_xia.1.dc
	}
	
	trigger = {
		# OBS! These checks are also hard coded in WouldBecomeShogunIfTaking() for AI and interface reasons. Change code too if this trigger changes.
		province_id = 4559
		#owner = {
		#	OR = {
		#		has_reform = xiaken
		#		has_reform = indep_xiaken
		#	}
		#}
	}
	
	immediate = {
		hidden_effect = {
			owner = {
				if = {
					limit = {
						OR = {
							has_reform = xiaken
							has_reform = indep_xiaken
						}
					}
					add_core = 4559
					set_capital = 4559
					add_government_reform = wulin
					save_event_target_as = new_wulin
				}
			}
		}
	}
	
	option = {
		name = one_xia.1.a
		if = {
			limit = {
				owner = { has_reform = wulin }
			}
			custom_tooltip = claiming_the_wulin_tooltip
		}
		hidden_effect = {
			if = {
				limit = {
					FROM = { exists = yes }
					owner = { has_reform = wulin }
					FROM = { has_reform = wulin }
				}
				FROM = {
					free_vassal = PREV
				}
				FROM = {
					every_subject_country = {
						limit = {
							OR = {
								has_reform = xiaken
								has_reform = indep_xiaken

							}
							NOT = { war_with = event_target:new_wulin }
						}
						event_target:new_wulin = {
							vassalize = PREV
						}
					}
					every_subject_country = {
						limit = {
							OR = {
								has_reform = xiaken
								has_reform = indep_xiaken
							}
							war_with = event_target:new_wulin
						}
						from = {
							free_vassal = prev
						}
						if = {
							limit = {
								NOT = { has_reform = indep_xiaken }
								NOT = { has_reform = pirate_republic_reform }
								NOT = { has_reform = pirate_king_reform }
								NOT = { has_reform = war_against_the_world_doctrine_reform }
								NOT = { has_reform = black_market_consortium_reform }
							}
							add_government_reform = indep_xiaken
						}
					}
					add_government_reform = indep_xiaken
				}
			}
			if = {
				limit = {
					FROM = { exists = yes }
					NOT = { owner = { has_reform = wulin } }
					FROM = { has_reform = wulin }
				}
				FROM = {
					every_subject_country = {
						limit = {
							OR = {
								has_reform = xiaken
								has_reform = indep_xiaken
							}
						}
						FROM = {
							free_vassal = PREV
						}
					}
					add_government_reform = indep_xiaken
				}
			}
			if = {
				limit = {
					NOT = {
						FROM = { exists = yes }
					}
					owner = { has_reform = wulin }
				}
				every_country = {
					limit = {
						has_reform = xiaken
						NOT = { war_with = event_target:new_wulin }
					}
					event_target:new_wulin = {
						vassalize = PREV
					}
				}
				every_country = {
					limit = {
						has_reform = xiaken
						war_with = event_target:new_wulin
					}
					add_government_reform = indep_xiaken
				}
				#solution for So Pirates
				every_country = {
					limit = {
						NOT = { war_with = event_target:new_wulin }
					}
					country_event = { id = one_xia.2 }
				}
			}
			if = {
				limit = {
					NOT = {
						FROM = { exists = yes }
					}
					NOT = {
						owner = { has_reform = wulin }
					}
				}
				every_country = {
					limit = { has_reform = xiaken }
					overlord = {
						free_vassal = PREV
					}
				}
			}
		}
		if = {
			limit = {
				NOT = {
					owner = { has_reform = wulin }
				}
			}
			owner = {
				if = {
					limit = { NOT = { has_country_flag = destroyed_wulin } }
					add_prestige = 20
					add_adm_power = 50
					add_dip_power = 50
					add_mil_power = 50
					set_country_flag = destroyed_wulin
				}
			}
		}
		hidden_effect = {
			if = {
				limit = {
					any_country = {
						is_subject_of_type = daimyo_xiaken_vassal
						NOT = { overlord = { has_reform = wulin } }
					}
				}
				every_country = {
					limit = {
						is_subject_of_type = daimyo_xiaken_vassal
						NOT = { overlord = { has_reform = wulin } }
					}
					overlord = {
						free_vassal = PREV
					}
				}
			}
		}
	}
}

# I couldn't actually find a way to get this event to fire from the last one, so I assume that the NOT = { exists = FROM } bit is actually unused. But just in case I missed something, it seems better to add this anyway.
# New Shogun - join or not?
country_event = {
	id = one_xia.2
	title = one_xia.2.t
	desc = one_xia.2.d
	picture = COURT_eventPicture
	
	is_triggered_only = yes
	
	option = { #be a xiaken
		name = one_xia.2.a

		event_target:new_wulin = {
			vassalize = root
		}

		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				num_of_cities = 10
			}
		}
	}
	option = { #don't be a xiaken
		name = one_xia.2.b
		
		event_target:new_wulin = {
			add_opinion = {
				who = root
				modifier = opinion_defy_new_shogun
			}
			country_event = { id = one_xia.3 days = 5 }
		}

		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				NOT = { num_of_cities = 10 }
			}
		}
	}
}


# So Defies our Authority
country_event = {
	id = one_xia.3
	title = one_xia.3.t
	desc = one_xia.3.d
	picture = COURT_eventPicture
	
	is_triggered_only = yes
	
	option = { #be a xiaken
		name = one_xia.3.a
	}
}